apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    control-plane: capv-controller-manager
  name: vsphereclusters.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereCluster
    plural: vsphereclusters
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: VSphereCluster is the Schema for the vsphereclusters API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VSphereClusterSpec defines the desired state of VSphereCluster
          properties:
            cloudProviderConfiguration:
              description: CloudProviderConfiguration holds the cluster-wide configuration
                for the vSphere cloud provider.
              properties:
                disk:
                  description: Disk is the vSphere cloud provider's disk configuration.
                  properties:
                    scsiControllerType:
                      description: SCSIControllerType defines SCSI controller to be
                        used.
                      type: string
                  type: object
                global:
                  description: Global is the vSphere cloud provider's global configuration.
                  properties:
                    apiBindPort:
                      description: APIBindPort configures the vSphere cloud controller
                        manager API port. Defaults to 43001.
                      type: string
                    apiDisable:
                      description: APIDisable disables the vSphere cloud controller
                        manager API. Defaults to true.
                      type: boolean
                    caFile:
                      description: CAFile Specifies the path to a CA certificate in
                        PEM format. If not configured, the system's CA certificates
                        will be used.
                      type: string
                    datacenters:
                      description: Datacenters is a CSV string of the datacenters
                        in which VMs are located.
                      type: string
                    insecure:
                      description: Insecure is a flag that disables TLS peer verification.
                      type: boolean
                    password:
                      description: Password is the password used to access a vSphere
                        endpoint.
                      type: string
                    port:
                      description: Port is the port on which the vSphere endpoint
                        is listening. Defaults to 443.
                      type: string
                    roundTripperCount:
                      description: RoundTripperCount specifies the SOAP round tripper
                        count (retries = RoundTripper - 1)
                      format: int32
                      type: integer
                    secretName:
                      description: SecretName is the name of the Kubernetes secret
                        in which the vSphere credentials are located.
                      type: string
                    secretNamespace:
                      description: SecretNamespace is the namespace for SecretName.
                      type: string
                    secretsDirectory:
                      description: 'SecretsDirectory is a directory in which secrets
                        may be found. This may used in the event that: 1. It is not
                        desirable to use the K8s API to watch changes to secrets 2.
                        The cloud controller manager is not running in a K8s environment,    such
                        as DC/OS. For example, the container storage interface (CSI)
                        is    container orcehstrator (CO) agnostic, and should support
                        non-K8s COs. Defaults to /etc/cloud/credentials.'
                      type: string
                    serviceAccount:
                      description: ServiceAccount is the Kubernetes service account
                        used to launch the cloud controller manager. Defaults to cloud-controller-manager.
                      type: string
                    thumbprint:
                      description: Thumbprint is the cryptographic thumbprint of the
                        vSphere endpoint's certificate.
                      type: string
                    username:
                      description: Username is the username used to access a vSphere
                        endpoint.
                      type: string
                  type: object
                labels:
                  description: Labels is the vSphere cloud provider's zone and region
                    configuration.
                  properties:
                    region:
                      description: Region is the region in which VMs are created/located.
                      type: string
                    zone:
                      description: Zone is the zone in which VMs are created/located.
                      type: string
                  type: object
                network:
                  description: Network is the vSphere cloud provider's network configuration.
                  properties:
                    name:
                      description: Name is the name of the network to which VMs are
                        connected.
                      type: string
                  type: object
                virtualCenter:
                  additionalProperties:
                    description: VCenterConfig is a vSphere cloud provider's vCenter
                      configuration.
                    properties:
                      datacenters:
                        description: Datacenters is a CSV string of the datacenters
                          in which VMs are located.
                        type: string
                      password:
                        description: Password is the password used to access a vSphere
                          endpoint.
                        type: string
                      port:
                        description: Port is the port on which the vSphere endpoint
                          is listening. Defaults to 443.
                        type: string
                      roundTripperCount:
                        description: RoundTripperCount specifies the SOAP round tripper
                          count (retries = RoundTripper - 1)
                        format: int32
                        type: integer
                      thumbprint:
                        description: Thumbprint is the cryptographic thumbprint of
                          the vSphere endpoint's certificate.
                        type: string
                      username:
                        description: Username is the username used to access a vSphere
                          endpoint.
                        type: string
                    type: object
                  description: VCenter is a list of vCenter configurations.
                  type: object
                workspace:
                  description: Workspace is the vSphere cloud provider's workspace
                    configuration.
                  properties:
                    datacenter:
                      description: Datacenter is the datacenter in which VMs are created/located.
                      type: string
                    datastore:
                      description: Datastore is the datastore in which VMs are created/located.
                      type: string
                    folder:
                      description: Folder is the folder in which VMs are created/located.
                      type: string
                    resourcePool:
                      description: ResourcePool is the resource pool in which VMs
                        are created/located.
                      type: string
                    server:
                      description: Server is the IP address or FQDN of the vSphere
                        endpoint.
                      type: string
                  type: object
              type: object
            insecure:
              description: Insecure is a flag that controls whether or not to validate
                the vSphere server's certificate.
              type: boolean
            server:
              description: Server is the address of the vSphere endpoint.
              type: string
          type: object
        status:
          description: VSphereClusterStatus defines the observed state of VSphereClusterSpec
          properties:
            apiEndpoints:
              description: APIEndpoints represents the endpoints to communicate with
                the control plane.
              items:
                description: APIEndpoint represents a reachable Kubernetes API endpoint.
                properties:
                  host:
                    description: The hostname on which the API server is serving.
                    type: string
                  port:
                    description: The port on which the API server is serving.
                    type: integer
                required:
                - host
                - port
                type: object
              type: array
            ready:
              type: boolean
          required:
          - ready
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    control-plane: capv-controller-manager
  name: vspheremachines.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereMachine
    plural: vspheremachines
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: VSphereMachine is the Schema for the vspheremachines API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VSphereMachineSpec defines the desired state of VSphereMachine
          properties:
            datacenter:
              description: Datacenter is the name or inventory path of the datacenter
                where this machine's VM is created/located.
              type: string
            diskGiB:
              description: DiskGiB is the size of a virtual machine's disk, in GiB.
                Defaults to the analogue property value in the template from which
                this machine is cloned.
              format: int32
              type: integer
            machineRef:
              description: This value is set automatically at runtime and should not
                be set or modified by users. MachineRef is used to lookup the VM.
              type: string
            memoryMiB:
              description: MemoryMiB is the size of a virtual machine's memory, in
                MiB. Defaults to the analogue property value in the template from
                which this machine is cloned.
              format: int64
              type: integer
            network:
              description: Network is the network configuration for this machine's
                VM.
              properties:
                devices:
                  description: Devices is the list of network devices used by the
                    virtual machine. TODO(akutz) Make sure at least one network matches
                    the             ClusterSpec.CloudProviderConfiguration.Network.Name
                  items:
                    description: NetworkDeviceSpec defines the network configuration
                      for a virtual machine's network device.
                    properties:
                      dhcp4:
                        description: DHCP4 is a flag that indicates whether or not
                          to use DHCP for IPv4 on this device. If true then IPAddrs
                          should not contain any IPv4 addresses.
                        type: boolean
                      dhcp6:
                        description: DHCP6 is a flag that indicates whether or not
                          to use DHCP for IPv6 on this device. If true then IPAddrs
                          should not contain any IPv6 addresses.
                        type: boolean
                      gateway4:
                        description: Gateway4 is the IPv4 gateway used by this device.
                          Required when DHCP4 is false.
                        type: string
                      gateway6:
                        description: Gateway4 is the IPv4 gateway used by this device.
                          Required when DHCP6 is false.
                        type: string
                      ipAddrs:
                        description: IPAddrs is a list of one or more IPv4 and/or
                          IPv6 addresses to assign to this device. Required when DHCP4
                          and DHCP6 are both false.
                        items:
                          type: string
                        type: array
                      macAddr:
                        description: MACAddr is the MAC address used by this device.
                          It is generally a good idea to omit this field and allow
                          a MAC address to be generated. Please note that this value
                          must use the VMware OUI to work with the in-tree vSphere
                          cloud provider.
                        type: string
                      mtu:
                        description: MTU is the device’s Maximum Transmission Unit
                          size in bytes.
                        format: int64
                        type: integer
                      nameservers:
                        description: Nameservers is a list of IPv4 and/or IPv6 addresses
                          used as DNS nameservers. Please note that Linux allows only
                          three nameservers (https://linux.die.net/man/5/resolv.conf).
                        items:
                          type: string
                        type: array
                      networkName:
                        description: NetworkName is the name of the vSphere network
                          to which the device will be connected.
                        type: string
                      routes:
                        description: Routes is a list of optional, static routes applied
                          to the device.
                        items:
                          description: NetworkRouteSpec defines a static network route.
                          properties:
                            metric:
                              description: Metric is the weight/priority of the route.
                              format: int32
                              type: integer
                            to:
                              description: To is an IPv4 or IPv6 address.
                              type: string
                            via:
                              description: Via is an IPv4 or IPv6 address.
                              type: string
                          required:
                          - metric
                          - to
                          - via
                          type: object
                        type: array
                      searchDomains:
                        description: SearchDomains is a list of search domains used
                          when resolving IP addresses with DNS.
                        items:
                          type: string
                        type: array
                    required:
                    - networkName
                    type: object
                  type: array
                preferredAPIServerCidr:
                  description: PreferredAPIServeCIDR is the preferred CIDR for the
                    Kubernetes API server endpoint on this machine
                  type: string
                routes:
                  description: Routes is a list of optional, static routes applied
                    to the virtual machine.
                  items:
                    description: NetworkRouteSpec defines a static network route.
                    properties:
                      metric:
                        description: Metric is the weight/priority of the route.
                        format: int32
                        type: integer
                      to:
                        description: To is an IPv4 or IPv6 address.
                        type: string
                      via:
                        description: Via is an IPv4 or IPv6 address.
                        type: string
                    required:
                    - metric
                    - to
                    - via
                    type: object
                  type: array
              required:
              - devices
              type: object
            ntpServers:
              description: NTPServers is a list of NTP servers to use instead of the
                machine image's default NTP server list.
              items:
                type: string
              type: array
            numCPUs:
              description: NumCPUs is the number of virtual processors in a virtual
                machine. Defaults to the analogue property value in the template from
                which this machine is cloned.
              format: int32
              type: integer
            numCoresPerSocket:
              description: NumCPUs is the number of cores among which to distribute
                CPUs in this virtual machine. Defaults to the analogue property value
                in the template from which this machine is cloned.
              format: int32
              type: integer
            providerID:
              description: ProviderID is the virtual machine's BIOS UUID formated
                as vsphere://12345678-1234-1234-1234-123456789abc
              type: string
            template:
              description: Template is the name, inventory path, or instance UUID
                of the template used to clone new machines.
              type: string
            trustedCerts:
              description: TrustedCerts is a list of trusted certificates to add to
                the machine's VM.
              items:
                format: byte
                type: string
              type: array
          required:
          - datacenter
          - network
          - template
          type: object
        status:
          description: VSphereMachineStatus defines the observed state of VSphereMachine
          properties:
            addresses:
              description: Addresses contains the VSphere instance associated addresses.
              items:
                description: NodeAddress contains information for the node's address.
                properties:
                  address:
                    description: The node address.
                    type: string
                  type:
                    description: Node address type, one of Hostname, ExternalIP or
                      InternalIP.
                    type: string
                required:
                - address
                - type
                type: object
              type: array
            errorMessage:
              description: "ErrorMessage will be set in the event that there is a
                terminal problem reconciling the Machine and will contain a more verbose
                string suitable for logging and human consumption. \n This field should
                not be set for transitive errors that a controller faces that are
                expected to be fixed automatically over time (like service outages),
                but instead indicate that something is fundamentally wrong with the
                Machine's spec or the configuration of the controller, and that manual
                intervention is required. Examples of terminal errors would be invalid
                combinations of settings in the spec, values that are unsupported
                by the controller, or the responsible controller itself being critically
                misconfigured. \n Any transient errors that occur during the reconciliation
                of Machines can be added as events to the Machine object and/or logged
                in the controller's output."
              type: string
            errorReason:
              description: "ErrorReason will be set in the event that there is a terminal
                problem reconciling the Machine and will contain a succinct value
                suitable for machine interpretation. \n This field should not be set
                for transitive errors that a controller faces that are expected to
                be fixed automatically over time (like service outages), but instead
                indicate that something is fundamentally wrong with the Machine's
                spec or the configuration of the controller, and that manual intervention
                is required. Examples of terminal errors would be invalid combinations
                of settings in the spec, values that are unsupported by the controller,
                or the responsible controller itself being critically misconfigured.
                \n Any transient errors that occur during the reconciliation of Machines
                can be added as events to the Machine object and/or logged in the
                controller's output."
              type: string
            networkStatus:
              description: Network returns the network status for each of the machine's
                configured network interfaces.
              items:
                description: NetworkStatus provides information about one of a VM's
                  networks.
                properties:
                  connected:
                    description: Connected is a flag that indicates whether this network
                      is currently connected to the VM.
                    type: boolean
                  ipAddrs:
                    description: IPAddrs is one or more IP addresses reported by vm-tools.
                    items:
                      type: string
                    type: array
                  macAddr:
                    description: MACAddr is the MAC address of the network device.
                    type: string
                  networkName:
                    description: NetworkName is the name of the network.
                    type: string
                required:
                - macAddr
                type: object
              type: array
            ready:
              description: Ready is true when the provider resource is ready.
              type: boolean
            taskRef:
              description: TaskRef is a managed object reference to a Task related
                to the machine. This value is set automatically at runtime and should
                not be set or modified by users.
              type: string
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    control-plane: capv-controller-manager
  name: vspheremachinetemplates.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: VSphereMachineTemplate
    plural: vspheremachinetemplates
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: VSphereMachineTemplate is the Schema for the vspheremachinetemplates
        API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: VSphereMachineTemplateSpec defines the desired state of VSphereMachineTemplate
          properties:
            template:
              description: VSphereMachineTemplateResource describes the data needed
                to create a VSphereMachine from a template
              properties:
                apiVersion:
                  description: 'APIVersion defines the versioned schema of this representation
                    of an object. Servers should convert recognized schemas to the
                    latest internal value, and may reject unrecognized values. More
                    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                  type: string
                kind:
                  description: 'Kind is a string value representing the REST resource
                    this object represents. Servers may infer this from the endpoint
                    the client submits requests to. Cannot be updated. In CamelCase.
                    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                  type: string
                metadata:
                  description: Standard object's metadata.
                  properties:
                    annotations:
                      additionalProperties:
                        type: string
                      description: 'Annotations is an unstructured key value map stored
                        with a resource that may be set by external tools to store
                        and retrieve arbitrary metadata. They are not queryable and
                        should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                      type: object
                    generateName:
                      description: "GenerateName is an optional prefix, used by the
                        server, to generate a unique name ONLY IF the Name field has
                        not been provided. If this field is used, the name returned
                        to the client will be different than the name passed. This
                        value will also be combined with a unique suffix. The provided
                        value has the same validation rules as the Name field, and
                        may be truncated by the length of the suffix required to make
                        the value unique on the server. \n If this field is specified
                        and the generated name exists, the server will NOT return
                        a 409 - instead, it will either return 201 Created or 500
                        with Reason ServerTimeout indicating a unique name could not
                        be found in the time allotted, and the client should retry
                        (optionally after the time indicated in the Retry-After header).
                        \n Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency"
                      type: string
                    labels:
                      additionalProperties:
                        type: string
                      description: 'Map of string keys and values that can be used
                        to organize and categorize (scope and select) objects. May
                        match selectors of replication controllers and services. More
                        info: http://kubernetes.io/docs/user-guide/labels'
                      type: object
                    name:
                      description: 'Name must be unique within a namespace. Is required
                        when creating resources, although some resources may allow
                        a client to request the generation of an appropriate name
                        automatically. Name is primarily intended for creation idempotence
                        and configuration definition. Cannot be updated. More info:
                        http://kubernetes.io/docs/user-guide/identifiers#names'
                      type: string
                    namespace:
                      description: "Namespace defines the space within each name must
                        be unique. An empty namespace is equivalent to the \"default\"
                        namespace, but \"default\" is the canonical representation.
                        Not all objects are required to be scoped to a namespace -
                        the value of this field for those objects will be empty. \n
                        Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces"
                      type: string
                    ownerReferences:
                      description: List of objects depended by this object. If ALL
                        objects in the list have been deleted, this object will be
                        garbage collected. If this object is managed by a controller,
                        then an entry in this list will point to this controller,
                        with the controller field set to true. There cannot be more
                        than one managing controller.
                      items:
                        description: OwnerReference contains enough information to
                          let you identify an owning object. An owning object must
                          be in the same namespace as the dependent, or be cluster-scoped,
                          so there is no namespace field.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          blockOwnerDeletion:
                            description: If true, AND if the owner has the "foregroundDeletion"
                              finalizer, then the owner cannot be deleted from the
                              key-value store until this reference is removed. Defaults
                              to false. To set this field, a user needs "delete" permission
                              of the owner, otherwise 422 (Unprocessable Entity) will
                              be returned.
                            type: boolean
                          controller:
                            description: If true, this reference points to the managing
                              controller.
                            type: boolean
                          kind:
                            description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          name:
                            description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                          uid:
                            description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                            type: string
                        required:
                        - apiVersion
                        - kind
                        - name
                        - uid
                        type: object
                      type: array
                  type: object
                spec:
                  description: Spec is the specification of the desired behavior of
                    the machine.
                  properties:
                    datacenter:
                      description: Datacenter is the name or inventory path of the
                        datacenter where this machine's VM is created/located.
                      type: string
                    diskGiB:
                      description: DiskGiB is the size of a virtual machine's disk,
                        in GiB. Defaults to the analogue property value in the template
                        from which this machine is cloned.
                      format: int32
                      type: integer
                    machineRef:
                      description: This value is set automatically at runtime and
                        should not be set or modified by users. MachineRef is used
                        to lookup the VM.
                      type: string
                    memoryMiB:
                      description: MemoryMiB is the size of a virtual machine's memory,
                        in MiB. Defaults to the analogue property value in the template
                        from which this machine is cloned.
                      format: int64
                      type: integer
                    network:
                      description: Network is the network configuration for this machine's
                        VM.
                      properties:
                        devices:
                          description: Devices is the list of network devices used
                            by the virtual machine. TODO(akutz) Make sure at least
                            one network matches the             ClusterSpec.CloudProviderConfiguration.Network.Name
                          items:
                            description: NetworkDeviceSpec defines the network configuration
                              for a virtual machine's network device.
                            properties:
                              dhcp4:
                                description: DHCP4 is a flag that indicates whether
                                  or not to use DHCP for IPv4 on this device. If true
                                  then IPAddrs should not contain any IPv4 addresses.
                                type: boolean
                              dhcp6:
                                description: DHCP6 is a flag that indicates whether
                                  or not to use DHCP for IPv6 on this device. If true
                                  then IPAddrs should not contain any IPv6 addresses.
                                type: boolean
                              gateway4:
                                description: Gateway4 is the IPv4 gateway used by
                                  this device. Required when DHCP4 is false.
                                type: string
                              gateway6:
                                description: Gateway4 is the IPv4 gateway used by
                                  this device. Required when DHCP6 is false.
                                type: string
                              ipAddrs:
                                description: IPAddrs is a list of one or more IPv4
                                  and/or IPv6 addresses to assign to this device.
                                  Required when DHCP4 and DHCP6 are both false.
                                items:
                                  type: string
                                type: array
                              macAddr:
                                description: MACAddr is the MAC address used by this
                                  device. It is generally a good idea to omit this
                                  field and allow a MAC address to be generated. Please
                                  note that this value must use the VMware OUI to
                                  work with the in-tree vSphere cloud provider.
                                type: string
                              mtu:
                                description: MTU is the device’s Maximum Transmission
                                  Unit size in bytes.
                                format: int64
                                type: integer
                              nameservers:
                                description: Nameservers is a list of IPv4 and/or
                                  IPv6 addresses used as DNS nameservers. Please note
                                  that Linux allows only three nameservers (https://linux.die.net/man/5/resolv.conf).
                                items:
                                  type: string
                                type: array
                              networkName:
                                description: NetworkName is the name of the vSphere
                                  network to which the device will be connected.
                                type: string
                              routes:
                                description: Routes is a list of optional, static
                                  routes applied to the device.
                                items:
                                  description: NetworkRouteSpec defines a static network
                                    route.
                                  properties:
                                    metric:
                                      description: Metric is the weight/priority of
                                        the route.
                                      format: int32
                                      type: integer
                                    to:
                                      description: To is an IPv4 or IPv6 address.
                                      type: string
                                    via:
                                      description: Via is an IPv4 or IPv6 address.
                                      type: string
                                  required:
                                  - metric
                                  - to
                                  - via
                                  type: object
                                type: array
                              searchDomains:
                                description: SearchDomains is a list of search domains
                                  used when resolving IP addresses with DNS.
                                items:
                                  type: string
                                type: array
                            required:
                            - networkName
                            type: object
                          type: array
                        preferredAPIServerCidr:
                          description: PreferredAPIServeCIDR is the preferred CIDR
                            for the Kubernetes API server endpoint on this machine
                          type: string
                        routes:
                          description: Routes is a list of optional, static routes
                            applied to the virtual machine.
                          items:
                            description: NetworkRouteSpec defines a static network
                              route.
                            properties:
                              metric:
                                description: Metric is the weight/priority of the
                                  route.
                                format: int32
                                type: integer
                              to:
                                description: To is an IPv4 or IPv6 address.
                                type: string
                              via:
                                description: Via is an IPv4 or IPv6 address.
                                type: string
                            required:
                            - metric
                            - to
                            - via
                            type: object
                          type: array
                      required:
                      - devices
                      type: object
                    ntpServers:
                      description: NTPServers is a list of NTP servers to use instead
                        of the machine image's default NTP server list.
                      items:
                        type: string
                      type: array
                    numCPUs:
                      description: NumCPUs is the number of virtual processors in
                        a virtual machine. Defaults to the analogue property value
                        in the template from which this machine is cloned.
                      format: int32
                      type: integer
                    numCoresPerSocket:
                      description: NumCPUs is the number of cores among which to distribute
                        CPUs in this virtual machine. Defaults to the analogue property
                        value in the template from which this machine is cloned.
                      format: int32
                      type: integer
                    providerID:
                      description: ProviderID is the virtual machine's BIOS UUID formated
                        as vsphere://12345678-1234-1234-1234-123456789abc
                      type: string
                    template:
                      description: Template is the name, inventory path, or instance
                        UUID of the template used to clone new machines.
                      type: string
                    trustedCerts:
                      description: TrustedCerts is a list of trusted certificates
                        to add to the machine's VM.
                      items:
                        format: byte
                        type: string
                      type: array
                  required:
                  - datacenter
                  - network
                  - template
                  type: object
              required:
              - spec
              type: object
          required:
          - template
          type: object
      type: object
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-leader-election-role
  namespace: capv-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    control-plane: capv-controller-manager
  name: capv-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - clusters
  - clusters/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cluster.x-k8s.io
  resources:
  - machines
  - machines/status
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - get
  - list
  - patch
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vsphereclusters/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - infrastructure.cluster.x-k8s.io
  resources:
  - vspheremachines/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-leader-election-rolebinding
  namespace: capv-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: capv-leader-election-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capv-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capv-manager-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capv-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: capv-proxy-role
subjects:
- kind: ServiceAccount
  name: default
  namespace: capv-system
---
apiVersion: v1
data:
  password: VlNQSEVSRV9QQVNTV09SRA==
  username: VlNQSEVSRV9VU0VSTkFNRQ==
kind: Secret
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-manager-bootstrap-credentials-bf68c59757
  namespace: capv-system
type: Opaque
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/port: "8443"
    prometheus.io/scheme: https
    prometheus.io/scrape: "true"
  labels:
    control-plane: capv-controller-manager
  name: capv-controller-manager-metrics-service
  namespace: capv-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: capv-controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: capv-controller-manager
  name: capv-controller-manager
  namespace: capv-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: capv-controller-manager
  template:
    metadata:
      labels:
        control-plane: capv-controller-manager
    spec:
      containers:
      - args:
        - --enable-leader-election
        env:
        - name: VSPHERE_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: capv-manager-bootstrap-credentials-bf68c59757
        - name: VSPHERE_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: capv-manager-bootstrap-credentials-bf68c59757
        image: gcr.io/cluster-api-provider-vsphere/release/manager:latest
        imagePullPolicy: Always
        name: manager
      terminationGracePeriodSeconds: 10
